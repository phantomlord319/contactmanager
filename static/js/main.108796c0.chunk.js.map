{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroups.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","propType","PropTypes","string","isRequired","Contacts","Fragment","key","Header","branding","href","defaultProps","TextInputGroups","label","placeholder","onChange","errors","htmlFor","classnames","defautProps","AddContact","e","target","onSubmit","preventDefault","newContact","post","history","push","About","NotFound","Test","title","body","fetch","then","response","json","EditContact","updContact","match","params","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.108796c0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    //\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-chevron-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                ></i>\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                ></i>\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propType = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\n//import PropTypes from 'prop-types'\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-5 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              <br />\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props; //Destructuring\r\n  return (\r\n    <nav className=\"<navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroups = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  errors\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"name\">{label}</label>\r\n        <input\r\n          type={type}\r\n          name={name}\r\n          className={classnames(\"form-control form-control-lg\", {\r\n            \"is-invalid\": errors\r\n          })}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n               {errors && <div className=\"invalid-feedback\">{errors}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroups.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nTextInputGroups.defautProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroups;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroups\";\r\n//port uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault(e);\r\n\r\n    const { name, email, phone } = this.state;\r\n    //Check for Errors\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      // passing like these when key value is same\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name ...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    errors={errors.name}\r\n                  ></TextInputGroup>\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email ...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    errors={errors.email}\r\n                  ></TextInputGroup>\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone ...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    errors={errors.phone}\r\n                  ></TextInputGroup>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App to Manage Contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  /*\r\n  componentWillMount() {\r\n    console.log(\"component will mount\");\r\n  }\r\n  componentDidUpdate() {\r\n    console.log(\"It was updated.\");\r\n  } \r\n  componentWillUpdate(){\r\n      console.log('It will update.')\r\n  }\r\n  componentWillReceiveProps(nextProps, nextState){\r\n        console.log('componentWillREcieveProps.. ');\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState){\r\n      \r\n  }*/\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Test;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroups\";\r\n//import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      phone: contact.phone,\r\n      email: contact.email\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault(e);\r\n\r\n    const { name, email, phone } = this.state;\r\n    //Check for Errors\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name ...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    errors={errors.name}\r\n                  ></TextInputGroup>\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email ...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    errors={errors.email}\r\n                  ></TextInputGroup>\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone ...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    errors={errors.phone}\r\n                  ></TextInputGroup>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport { Provider } from \"./context\";\nimport \"./App.css\";\n//import EditContact from \"./components/contacts/EditContact\";\n//import Contact from \"./components/Contact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contacts Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n// import React from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   /*\n//   return React.createElement(\n//     \"div\",\n//     { className: \"App\" },\n//     React.createElement(\"h1\", null, \"The App Component!\")\n//   );*/\n//   const name = \"Ankit\";\n//   return (\n//     <div className=\"App\">\n//       <h1>The App Component</h1>\n//       <h2>hello {name}</h2>\n//     </div>\n//   );\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}